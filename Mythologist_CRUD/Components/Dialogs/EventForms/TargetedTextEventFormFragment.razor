<MudSelect T="string" @bind-Value="SenderUsername" Variant="Variant.Outlined" Margin="Margin.Dense" Label="Sender">
    @foreach (var sender in PotentialSenders) {
        @if (sender != SharedLogic.Utils.Constants.ALL_PLAYERS_ID && 
             sender != SharedLogic.Utils.Constants.ALL_PLAYERS_IN_SCENE_ID) {
            <MudSelectItem Value="sender">@sender</MudSelectItem>
        }
    }
</MudSelect>

<MudTextField @bind-Value="MessageText" Margin="Margin.Dense" Label="Message" Variant="Variant.Outlined" AutoGrow></MudTextField>

@code {

    [Parameter]
    public List<string> PotentialSenders { get; set; } = new List<string>();

    private string? _senderUsername;
    #pragma warning disable BL0007
    [Parameter]
    public string? SenderUsername
    {
        get => _senderUsername;
        set
        {
            if (_senderUsername == value) return;
            _senderUsername = value;
            SenderUsernameChanged.InvokeAsync(value);
        }
    } 
    [Parameter]
    public EventCallback<string?> SenderUsernameChanged { get; set; }

    private string? _messageText;
    #pragma warning disable BL0007
    [Parameter]
    public string? MessageText
    {
        get => _messageText;
        set
        {
            if (_messageText == value) return;
            _messageText = value;
            MessageTextChanged.InvokeAsync(value);
        }
    }
    [Parameter]
    public EventCallback<string?> MessageTextChanged { get; set; }

}
